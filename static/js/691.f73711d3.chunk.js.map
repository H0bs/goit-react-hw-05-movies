{"version":3,"file":"static/js/691.f73711d3.chunk.js","mappings":"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","sources":["Api/api.js","components/MoviesList/MovieList.syled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst KEY = '6d7719b287a3b4f9def878f317f76757';\n\nexport const getTrendingMovies = async (controller) => {\n  \n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((movie) => ({\n    id: movie.id,\n    title: movie.title,\n  }));\n}\n\nexport const getMovieById = async (id, controller) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  })\n\n  return await response.data;\n}\n\nexport const getActors = async (id, controller) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.cast.map((actor) => ({\n    id: actor.id,\n    name: actor.name,\n    character: actor.character,\n    profile_path: actor.profile_path,\n  }));\n}\n\nexport const getReview = async (id, controller) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((review) => ({\n    id: review.id,\n    author: review.author,\n    content: review.content,\n  }));\n}\n\nexport const getMovieByName = async (search, controller) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${search}`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((movie) => ({\n    id: movie.id,\n    title: movie.title,\n  }));\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n  text-align: center;\n`;\n\nexport const ListItem = styled.li`\n  font-weight: bold;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { List, ListItem } from \"./MovieList.syled\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({id, title}) => (\n        <ListItem key={id}>\n          <Link to={`/movies/${id}`} state={{from: location}}>\n            <p>{title}</p>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  )\n}","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  padding: 5px;\n`;\n\nexport const Input = styled.input`\npadding: 8px 8px;\n  border-radius: 4px;\n  margin-right: 4px;\n  margin-bottom: 4px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 8px;\n  border-radius: 8px;\n  color: inherit;\n  font-weight: 700;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    color: greenyellow;\n    background-color: black;\n  }\n`;","import { getMovieByName } from \"Api/api\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { Button, Form, Input } from \"./Movies.styled\";\n\n\nconst Movies = () => {\n  const [search, setSearch] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"name\") ?? \"\";\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setSearchParams({ name: search });\n    setSearch('');\n  }\n\n  const handleInput = e => {\n    setSearch(e.target.value.toLowerCase());\n  }\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n  \n  const controller = new AbortController();\n\n  const fetchFoundMovies = async () => {\n    try {\n      const response = await getMovieByName(searchQuery, controller);\n\n      if (response.length === 0) {\n        return alert(\"Movie not found\");\n      } \n      setMovies(response);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n    fetchFoundMovies();\n    return () => {\n      controller.abort();\n    } \n}, [searchQuery])\n  \n  return (\n    <>\n      <Form onSubmit={onSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          value={search}\n          placeholder=\"Enter a movie name\"\n          onChange={handleInput}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <MoviesList movies={movies} />\n    </>\n  )\n}\n\nexport default Movies;"],"names":["axios","KEY","getTrendingMovies","controller","signal","response","data","results","map","movie","id","title","getMovieById","getActors","cast","actor","name","character","profile_path","getReview","review","author","content","getMovieByName","search","List","styled","ListItem","MoviesList","movies","location","useLocation","to","state","from","Form","Input","Button","useState","setSearch","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","AbortController","fetchFoundMovies","length","alert","console","log","abort","onSubmit","e","preventDefault","type","value","placeholder","onChange","target","toLowerCase"],"sourceRoot":""}