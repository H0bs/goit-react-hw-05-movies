{"version":3,"file":"static/js/502.aa5e0c20.chunk.js","mappings":"8SACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAiB,mCAAG,WAAOC,GAAP,uFAERH,EAAAA,GAAAA,IAAA,qCAAwCC,GAAO,CACpEG,OAAQD,EAAWC,SAHU,cAEzBC,EAFyB,gBAMlBA,EAASC,KAAKC,QAAQC,KAAI,SAACC,GAAD,MAAY,CACjDC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MAFwB,IANR,mFAAH,sDAYjBC,EAAa,mCAAG,WAAOF,EAAIP,GAAX,uFACJH,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAiCT,EAAjC,mBAAuD,CAC5EG,OAAQD,EAAWC,SAFM,cACrBC,EADqB,gBAKdA,EAASC,KALK,mFAAH,wDAQbO,EAAS,mCAAG,WAAOH,EAAIP,GAAX,uFACAH,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,EAAzC,mBAA+D,CACpFG,OAAQD,EAAWC,SAFE,cACjBC,EADiB,gBAKVA,EAASC,KAAKQ,KAAKN,KAAI,SAACO,GAAD,MAAY,CAC9CL,GAAIK,EAAML,GACVM,KAAMD,EAAMC,KACZC,UAAWF,EAAME,UACjBC,aAAcH,EAAMG,aAJc,IALb,mFAAH,wDAaTC,EAAS,mCAAG,WAAOT,EAAIP,GAAX,uFACAH,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,EAAzC,mBAA+D,CACpFG,OAAQD,EAAWC,SAFE,cACjBC,EADiB,gBAKVA,EAASC,KAAKC,QAAQC,KAAI,SAACY,GAAD,MAAa,CAClDV,GAAIU,EAAOV,GACXW,OAAQD,EAAOC,OACfC,QAASF,EAAOE,QAHqB,IALhB,mFAAH,wDAYTC,EAAc,mCAAG,WAAOC,EAAQrB,GAAf,uFACLH,EAAAA,GAAAA,IAAA,+BAAkCC,EAAlC,iCAA8DuB,GAAU,CAC7FpB,OAAQD,EAAWC,SAFO,cACtBC,EADsB,gBAKfA,EAASC,KAAKC,QAAQC,KAAI,SAACC,GAAD,MAAY,CACjDC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MAFwB,IALX,mFAAH,uD,8JC/Cdc,EAAOC,EAAAA,EAAAA,GAAH,iGAOJC,EAAWD,EAAAA,EAAAA,GAAH,sFAMRE,EAAOF,EAAAA,EAAAA,EAAH,qE,SCiCjB,EA3CkB,WAChB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAM/B,EAAa,IAAIgC,gBACjBC,EAAW,mCAAG,8GAGOvB,EAAAA,EAAAA,IAAUgB,EAAS1B,GAH1B,OAGVE,EAHU,OAIhB4B,EAAU5B,GAJM,gDAOhBgC,QAAQC,IAAR,MAPgB,yDAAH,qDAWjB,OADAF,IACO,WACLjC,EAAWoC,OACZ,CACF,GAAE,CAACV,KAGF,SAACJ,EAAD,UACGO,EAAOQ,QACNR,EAAOxB,KAAI,SAAAO,GACT,OACE,UAACY,EAAD,WACGZ,EAAMG,cACL,gBAAKuB,IAAG,yCAAoC1B,EAAMG,cAChDwB,IAAK3B,EAAMC,QACb,gBAAKyB,IAAI,4DACPC,IAAK3B,EAAMC,QACf,SAACY,EAAD,UAAOb,EAAMC,QACb,uCAAeD,EAAME,eAPNF,EAAML,GAU1B,KAIR,C","sources":["Api/api.js","components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst KEY = '6d7719b287a3b4f9def878f317f76757';\n\nexport const getTrendingMovies = async (controller) => {\n  \n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((movie) => ({\n    id: movie.id,\n    title: movie.title,\n  }));\n}\n\nexport const getMoviesById = async (id, controller) => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  })\n\n  return await response.data;\n}\n\nexport const getActors = async (id, controller) => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.cast.map((actor) => ({\n    id: actor.id,\n    name: actor.name,\n    character: actor.character,\n    profile_path: actor.profile_path,\n  }));\n}\n\nexport const getReview = async (id, controller) => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((review) => ({\n    id: review.id,\n    author: review.author,\n    content: review.content,\n  }));\n}\n\nexport const getMovieByName = async (search, controller) => {\n  const response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${search}`, {\n    signal: controller.signal,\n  });\n\n  return await response.data.results.map((movie) => ({\n    id: movie.id,\n    title: movie.title,\n  }));\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  text-align: center;\n  width: 185px;\n  border: solid 1px;\n`;\n\nexport const Name = styled.p`\n  font-style: oblique;\n  font-weight: 500;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getActors } from \"Api/api\";\nimport { List, ListItem, Name } from \"./MovieCast.styled\";\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [ actors, setActors ] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const fetchActors = async () => {\n\n      try {\n        const response = await getActors(movieId, controller);\n        setActors(response);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchActors();\n    return () => {\n      controller.abort();\n    }\n  }, [movieId])\n\n  return (\n    <List>\n      {actors.length &&\n        actors.map(actor => {\n          return (\n            <ListItem key = {actor.id}>\n              {actor.profile_path ?\n                <img src={`https://image.tmdb.org/t/p/w185${actor.profile_path}`}\n                  alt={actor.name} /> :\n                <img src=\"https://via.placeholder.com/185x278?text=No+profile+photo\"\n                  alt={actor.name} />}\n              <Name>{actor.name}</Name>\n              <p>Character: {actor.character}</p>\n            </ListItem>\n          )\n        })\n      }\n    </List>\n  )\n}\n\nexport default MovieCast;"],"names":["axios","KEY","getTrendingMovies","controller","signal","response","data","results","map","movie","id","title","getMoviesById","getActors","cast","actor","name","character","profile_path","getReview","review","author","content","getMovieByName","search","List","styled","ListItem","Name","movieId","useParams","useState","actors","setActors","useEffect","AbortController","fetchActors","console","log","abort","length","src","alt"],"sourceRoot":""}